\input texinfo
@setfilename parset.info

@documentencoding utf-8

@settitle parset - set shell variables in parallel

@node Top
@top parset

@menu
* NAME::
* SYNOPSIS::
* DESCRIPTION::
* OPTIONS::
* SUPPORTED SHELLS::
* EXIT STATUS::
* AUTHOR::
* LICENSE::
* DEPENDENCIES::
* SEE ALSO::
@end menu

@node NAME
@chapter NAME

parset - set shell variables in parallel

@node SYNOPSIS
@chapter SYNOPSIS

@strong{parset} @emph{variablename} [options for GNU Parallel]

@strong{env_parset} @emph{variablename} [options for GNU Parallel]

@node DESCRIPTION
@chapter DESCRIPTION

@strong{parset} is a shell function that puts the output from GNU
@strong{parallel} into shell variables.

@strong{env_parset} is a shell function that puts the output from
@strong{env_parallel} into shell variables.

The @strong{parset} and @strong{env_parset} functions are defined as part of
@strong{env_parallel}.

If @emph{variablename} is a single variable name, this will be treated as
the destination variable and made into an array.

If @emph{variablename} contains multiple names separated by ',' or space,
the names will be the destination variables. The number of names must
be at least the number of jobs - otherwise some tmp files will not be
cleaned up.

@node OPTIONS
@chapter OPTIONS

Same as GNU @strong{parallel}, but they are put @emph{after} the destination
variable.

@node SUPPORTED SHELLS
@chapter SUPPORTED SHELLS

@menu
* Bash/Zsh/Ksh/Mksh::
* ash/dash (FreeBSD's /bin/sh)::
@end menu

@node Bash/Zsh/Ksh/Mksh
@section Bash/Zsh/Ksh/Mksh

@menu
* Examples::
* Installation::
@end menu

@node Examples
@subsection Examples

Put output into @strong{myarray}:

@verbatim
  parset myarray seq 3 ::: 4 5 6
  echo "${myarray[1]}"
@end verbatim

Put output into vars @strong{$seq, $pwd, $ls}:

@verbatim
  parset "seq pwd ls" ::: "seq 10" pwd ls
  echo "$ls"
@end verbatim

Put output into vars @strong{$seq, $pwd, $ls}:

@verbatim
  into_vars=(seq pwd ls)
  parset "${into_vars[*]}" ::: "seq 10" pwd ls
  echo "$ls"
@end verbatim

The commands to run can be an array:

@verbatim
  cmd=("echo first" "echo '<<joe  \"double  space\"  cartoon>>'" "pwd")
  parset data ::: "${cmd[@]}"
  echo "${data[1]}"
  echo "${data[2]}"
@end verbatim

@strong{parset} can read from stdin (standard input) if it is a file:

@verbatim
  parset res echo < parallel_input_file
@end verbatim

but @strong{parset} can not be part of a pipe. In particular this means it
cannot read from a pipe or write to a pipe:

@verbatim
  seq 10 | parset res echo Does not work
@end verbatim

but must instead use a tempfile:

@verbatim
  seq 10 > parallel_input
  parset res echo :::: parallel_input
  echo "${res[1]}"
  echo "${res[9]}"
@end verbatim

or a FIFO:

@verbatim
  mkfifo input_fifo
  seq 30 > input_fifo &
  parset res echo :::: input_fifo
  echo "${res[1]}"
  echo "${res[29]}"
@end verbatim

or Bash/Zsh/Ksh process substitution:

@verbatim
  parset res echo :::: <(seq 100)
  echo "${res[1]}"
  echo "${res[99]}"
@end verbatim

@node Installation
@subsection Installation

Put this in the relevant @strong{$HOME/.bashrc} or @strong{$HOME/.zshenv} or @strong{$HOME/.kshrc}:

@verbatim
  . `which env_parallel.bash`
  . `which env_parallel.zsh`
  source `which env_parallel.ksh` 
@end verbatim

E.g. by doing:

@verbatim
  echo '. `which env_parallel.bash`' >> $HOME/.bashrc
  echo '. `which env_parallel.zsh`' >> $HOME/.zshenv
  echo 'source `which env_parallel.ksh`' >> $HOME/.kshrc
@end verbatim

or by doing:

@verbatim
  env_parallel --install
@end verbatim

@node ash/dash (FreeBSD's /bin/sh)
@section ash/dash (FreeBSD's /bin/sh)

@menu
* Examples 1::
* Installation 1::
@end menu

@node Examples 1
@subsection Examples

ash does not support arrays.

Put output into vars @strong{$seq, $pwd, $ls}:

@verbatim
  parset "seq pwd ls" ::: "seq 10" pwd ls
  echo "$ls"
@end verbatim

@strong{parset} can read from stdin (standard input) if it is a file:

@verbatim
  parset res1,res2,res3 echo < parallel_input_file
@end verbatim

but @strong{parset} can not be part of a pipe. In particular this means it
cannot read from a pipe or write to a pipe:

@verbatim
  seq 3 | parset res1,res2,res3 echo Does not work
@end verbatim

but must instead use a tempfile:

@verbatim
  seq 3 > parallel_input
  parset res1,res2,res3 echo :::: parallel_input
  echo "$res1"
  echo "$res2"
  echo "$res3"
@end verbatim

or a FIFO:

@verbatim
  mkfifo input_fifo
  seq 3 > input_fifo &
  parset res1,res2,res3 echo :::: input_fifo
  echo "$res1"
  echo "$res2"
  echo "$res3"
@end verbatim

@node Installation 1
@subsection Installation

Put the relevant one of these into @strong{$HOME/.profile}:

@verbatim
  . `which env_parallel.sh`
  . `which env_parallel.ash`
  . `which env_parallel.dash`
@end verbatim

E.g. by doing:

@verbatim
  echo '. `which env_parallel.ash`' >> $HOME/.bashrc
@end verbatim

or by doing:

@verbatim
  env_parallel --install
@end verbatim

@node EXIT STATUS
@chapter EXIT STATUS

Same as GNU @strong{parallel}.

@node AUTHOR
@chapter AUTHOR

When using GNU @strong{parallel} for a publication please cite:

O. Tange (2011): GNU Parallel - The Command-Line Power Tool, ;login:
The USENIX Magazine, February 2011:42-47.

This helps funding further development; and it won't cost you a cent.
If you pay 10000 EUR you should feel free to use GNU Parallel without citing.

Copyright (C) 2007-10-18 Ole Tange, http://ole.tange.dk

Copyright (C) 2008-2010 Ole Tange, http://ole.tange.dk

Copyright (C) 2010-2020 Ole Tange, http://ole.tange.dk and Free
Software Foundation, Inc.

@node LICENSE
@chapter LICENSE

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or
at your option any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

@menu
* Documentation license I::
* Documentation license II::
@end menu

@node Documentation license I
@section Documentation license I

Permission is granted to copy, distribute and/or modify this documentation
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts.  A copy of the license is included in the file fdl.txt.

@node Documentation license II
@section Documentation license II

You are free:

@table @asis
@item @strong{to Share}
@anchor{@strong{to Share}}

to copy, distribute and transmit the work

@item @strong{to Remix}
@anchor{@strong{to Remix}}

to adapt the work

@end table

Under the following conditions:

@table @asis
@item @strong{Attribution}
@anchor{@strong{Attribution}}

You must attribute the work in the manner specified by the author or
licensor (but not in any way that suggests that they endorse you or
your use of the work).

@item @strong{Share Alike}
@anchor{@strong{Share Alike}}

If you alter, transform, or build upon this work, you may distribute
the resulting work only under the same, similar or a compatible
license.

@end table

With the understanding that:

@table @asis
@item @strong{Waiver}
@anchor{@strong{Waiver}}

Any of the above conditions can be waived if you get permission from
the copyright holder.

@item @strong{Public Domain}
@anchor{@strong{Public Domain}}

Where the work or any of its elements is in the public domain under
applicable law, that status is in no way affected by the license.

@item @strong{Other Rights}
@anchor{@strong{Other Rights}}

In no way are any of the following rights affected by the license:

@itemize
@item Your fair dealing or fair use rights, or other applicable
copyright exceptions and limitations;

@item The author's moral rights;

@item Rights other persons may have either in the work itself or in
how the work is used, such as publicity or privacy rights.

@end itemize

@end table

@table @asis
@item @strong{Notice}
@anchor{@strong{Notice}}

For any reuse or distribution, you must make clear to others the
license terms of this work.

@end table

A copy of the full license is included in the file as cc-by-sa.txt.

@node DEPENDENCIES
@chapter DEPENDENCIES

@strong{parset} uses GNU @strong{parallel}.

@node SEE ALSO
@chapter SEE ALSO

@strong{parallel}(1), @strong{env_parallel}(1), @strong{bash}(1).

@bye
